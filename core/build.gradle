plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
    id 'idea'
    id 'eclipse'
}

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    // Shaded dependencies:
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    implementation group: 'com.google.guava', name: 'guava', version: '33.2.0-jre'
    implementation group: 'io.netty', name: 'netty-buffer', version: '4.1.109.Final'
    implementation group: 'io.netty', name: 'netty-codec', version: '4.1.109.Final'
}

// --- Java 21 Compatibility ---
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

// Remove all relocations & minimize calls to skip scanning advanced Java 21 classes.
shadowJar {
    archiveClassifier.set('')
}

// Make 'build' depend on 'shadowJar'
tasks.named('jar') {
    enabled = false
}
tasks.named('build') {
    dependsOn tasks.named('shadowJar')
}
artifacts {
    runtimeOnly shadowJar
}

// Force ASM 9.5 so Shadow's internal ASM can parse Java 21 bytecode
configurations.all {
    resolutionStrategy {
        force 'org.ow2.asm:asm:9.5'
        force 'org.ow2.asm:asm-tree:9.5'
        force 'org.ow2.asm:asm-commons:9.5'
        force 'org.ow2.asm:asm-util:9.5'
    }
}

// Example: Generate templates
def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')

def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
        'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

// Add the generated templates to the main source set
sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })
